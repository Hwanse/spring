<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- use-default-filters  
		  - true: @Controller, @Service, @Repository, @Component와 같은 어노테이션을 자동처리
		  - false: 개발자가 아래와 같이 기술한 어노테이션만 처리해줌
	-->
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">		
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<mvc:default-servlet-handler/>
	
	<!-- 기본적으로 url을 forward 처리함
		 복수개의 viewResolver를 사용할 경우 우선순위를 가장 늦게 배정
		 viewName이 유효한지(존재하는지)와 관계없이 무조건 처리
		 
	 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>	<!-- 접두 -->
		<property name="suffix" value=".jsp"/>	<!-- 접미 -->
		<property name="order" value="3"/>	<!-- 우선순위도 배정 : 3순위 -->
	</bean>

	<!-- Controller에서 리턴하는 view이름과 동일한 spring bean이 존재하면 해당 view에 위임 -->
	<!-- jsonView라는 이름의 요청이 오면 json데이터 반환 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="2"/> <!-- 우선순위도 배정 : 2순위 -->
	</bean>


	<!-- tiles view resolver -->
	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath:kr/or/ddit/config/tiles/tiles-config.xml</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<property name="order" value="1"></property>	<!-- 우선순위 : 1순위 -->
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	</bean>
	
	<!-- 
		ex: 만약 Controller.method가 "user/user"라는 viewName을 리턴했을 때
		1. 우선 순위에 따라 tilesViewResolver가 "user/user"와 동일한 tilesDefinition이 있는지 확인 => 없음
		2. 2순위 우선순위에 따라 beanNameViewResolver "user/user"과 동일한 spring bean이 있는지 확인 => 없음 확인
		3. 후순 우선순위에 따라서 internalResourceViewResolve가 prefix + "user/user" + surffix로 forward
		
		ex: 만약 Controller.method가 "user/user"라는 jsonName을 리턴했을 때
		1. 우선순위에 따라 beanNameViewResolver "jsonView"과 동일한 spring bean이 있는지 확인 => 있음
		2. 해당 springBean(view)에게 응답을 생성하도록 요청

		ex: 만약 Controller.method가 "profileView"라는 viewName을 리턴했을 때
		1. 우선순위에 따라 beanNameViewResolver "profileView"과 동일한 spring bean이 있는지 확인 => 있음
		2. 해당 springBean(view)에게 응답을 생성하도록 요청
		
		ex: controller 가 "main" viewName을 리턴
		1. 우선순위에 따라 tilesViewResolver가 tiles 설정파일에서 "main"이라는 이름으로 defination이 있는지 확인: 있음
		2. tiles 설정에 의해 layout.jsp를 template으로 body영역만 main.jsp로 대체하여 응답을 생성
		
	 -->
	

	<!-- Controller에서 model객체에 넣은 속성을 이용하여 json으로 만들어주는 view -->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	
	<!-- profile 이미지를 처리해주는 view -->
	<bean id="profileView" class="kr.or.ddit.view.ProfileView"/>
	
	<!-- 사용자 엑셀 정보를 처리해주는 view -->
	<bean id="userExcelView" class="kr.or.ddit.view.ExcelDownloadView"/>
	
	<!-- multipart resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSizePerFile" value="3145728"/>
		<property name="maxUploadSize" value="15728640"/>
	</bean>

	<!-- messageSource -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:kr/or/ddit/msg/error</value>
				<value>classpath:kr/or/ddit/msg/msg</value>
			</list>
		</property>
	</bean>

	<!-- 빈 이름 고정 localeResolver -->
	<!-- locale정보가 session에 셋팅된다 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
	
	
</beans>
