<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">

  <!-- 사용자 등록하기 -->
  <insert id="insertUser" parameterType="userVO">
  	INSERT INTO USERS
  	(
  		USERID
  	   ,NAME
  	   ,ALIAS
  	   ,PASS 
  	   ,ADDR1
	   ,ADDR2
	   ,ZIPCD
	   ,BIRTH
	   ,PATH
	   ,FILENAME
  	)
  	VALUES
  	(
  		#{userId}
  	   ,#{name}
  	   ,#{alias}
  	   ,#{pass}
  	   ,#{addr1}
  	   ,#{addr2}
  	   ,#{zipcd}
  	   ,#{birth}
  	   ,#{path, jdbcType=VARCHAR}
  	   ,#{filename, jdbcType=VARCHAR}
  	)
  </insert>
  
  <!-- 전체 사용자 리스트 조회 -->
  <select id="userList" resultType="userVO">
    SELECT 		* 
    FROM 		USERS
	ORDER BY 	USERID
  </select>
  
  
  <!-- 특정 사용자 조회 -->
  <select id="getUser" parameterType="string" resultType="userVO">
  	SELECT	*
  	FROM	USERS
  	WHERE	USERID = #{userId}
  </select>
  
  <!-- 사용자 페이지 리스트 조회 -->
  <!-- pageVO => int page, int pageSize -->
  <select id="userPagingList" parameterType="pageVO" resultType="userVO">
  	<![CDATA[
  	SELECT  *
	FROM
		(   
		SELECT A.*, ROWNUM RN
	    FROM
	        (
	         SELECT  A.*
	         FROM    USERS A
	         ORDER BY USERID
	         ) A) 
	     WHERE  RN >= ( #{page} - 1) * #{pageSize} + 1 
	     AND RN <= #{page} * #{pageSize}
  	]]>
  </select> 
  
  <!-- 사용자 전체 수 조회 -->
  <select id="usersCnt" resultType="int">
  	SELECT	COUNT(*)
  	FROM	USERS
  </select>
  
  
  <!-- 사용자 삭제 -->
  <delete id="deleteUser" parameterType="string">
  	DELETE	USERS
  	WHERE	USERID = #{userId}
  </delete>
  
  
  <update id="updateUser" parameterType="userVO">
  	UPDATE	USERS
  	SET		NAME = #{name}
  		   ,ALIAS = #{alias}
  		   ,ADDR1 = #{addr1}
  		   ,ADDR2 = #{addr2}
  		   ,ZIPCD = #{zipcd}
  		   ,BIRTH = #{birth}
  		   ,PASS = #{pass}
  		   ,PATH = #{path, jdbcType=VARCHAR}
  		   ,FILENAME = #{filename, jdbcType=VARCHAR}
  	WHERE	USERID = #{userId}
  </update>

  <!-- 사용자 비밀번호 암호화 적용대상 조회 -->
  <select id="userListForPassEncrypt" resultType="userVO">
  	SELECT  *
	FROM    USERS
	WHERE   USERID NOT IN ('brown', 'userTest', 'userTest5')
  </select>
  
  <!-- 사용자 비밀번호 업데이트 -->
  <update id="updateUserEncryptPass" parameterType="userVO">
  	UPDATE	USERS
  	SET		PASS = #{pass}
  	WHERE	USERID = #{userId}
  </update>
  
</mapper>